%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(TM) 7.0%%AI8_CreatorVersion: 8.0.1%%For: (Luxon Carra) (Luxon Carra)%%Title: (SU_BlockStree_2color_db.eps)%%CreationDate: (3/27/03) (8:53 AM)%%BoundingBox: 261 326 353 465%%HiResBoundingBox: 261.2563 326.1504 352.3652 464.7192%%DocumentProcessColors:%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.1 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%AI5_FileFormat 3.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%DocumentCustomColors: (PANTONE 201 CVC)%%+ (PANTONE 3298 CVC)%%CMYKCustomColor: 0 1 0.65 0.34 (PANTONE 201 CVC)%%+ 1 0 0.6 0.38 (PANTONE 3298 CVC)%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 306.5 395.5 306.5 395.5%AI3_TileBox: 18 15 594 774%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 612 792%AI5_RulerUnits: 2%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI5_OpenToView: -1.5908 575.5513 1.5 1010 721 18 0 1 87 132 0 0%AI5_OpenViewLayers: 7%%PageOrigin:18 15%%AI3_PaperRect:-18 774 594 -18%%AI3_Margin:18 -15 -18 18%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 84 128 8%%BeginData: 20700 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD11FFA18D688D698D688D698D688D698D688D698D688D698D688D%698D688D698D688D698D688D698D688D698D688D698D688D6993A8FD20FF%A16968696869686968696869686968696869686968696869686968696869%68696869686968696869686968696869686968696869A8FD1EFFA16968BD%FD2FFFB66893A8FD1CFFA169689BFD18FF7D59FD16FFA8946869A8FD1AFF%9A8D69BDFFFFA19A6F9A949A6F9A949A6F9A949A6F9A949A6F9A949AA884%2EFF6F9A949A6F9A949A6F9A949A6F9A949A6F9A949AFFFFFFB66893CAFD%18FF9A69689BFFFFA1696869686968696869686968696869686968696869%6FFF0B0CFF696869686968696869686968696869686968696893A8FFA869%688DA8FD16FF9A8D689BFFFFA169688D6869688D6869688D6869688D6869%688D6894CAFF7D0C0BAF6F69688D6869688D6869688D6869688D6869688D%6894CAFFCA6F6894FD15FF946968A2FFFFA1696869686968696869686968%696869686968696869A1A82E0C050B2EFFA86F6869686968696869686968%696869686968696893A8FFA8696893CAFD12FF9A8D68CAFFFFA18D698D68%8D698D688D698D688D698D688D698D688D69FF340C0B0C0B0C0B83A88D69%8D688D698D688D698D688D698D688D698D6894FFFFA8B66994FD11FF7069%68A2FFFFA16968696869686968696869686968696869686968696869A183%0B0C050B050C58CA68696869686968696869686968696869686968696894%CAFFA86F6893A8FD0EFF9A6968CAFFFFA18D6869688D6869688D6869688D%6869688D6869688D686968BDFFFF0B0C0B2E59FF6F69688D6869688D6869%688D6869688D6869688D68696894FFFFA8946894CAFD0CFF706968A2FFFF%A169686968696869686968696869686968696869686968696869A1FF340B%050C0BFFA169686968696869686968696869686968696869686968696894%FFFFA8696893A8FD0AFF9A8D69C4FFFFA18D688D698D688D698D688D698D%688D698D688D698D688D698DA1FF0B0C0B0C0B0C59FFA18D688D698D688D%698D688D698D688D698D688D698D688D699BFFFFCA946894FD09FF9A6968%A2FFFFA16968696869686968696869686968696869686968696869686968%FF590C050B050C050B34FF9A696869686968696869686968696869686968%6968696869689AFFFFA8696894CAFD06FF9A8D68C4FFFFA169688D686968%8D6869688D6869688D6869688D6869688D6869688DFF830B0C0B0C0B0C0B%0C84FF6869688D6869688D6869688D6869688D6869688D6869688D689AFF%FFCA6F6894FD05FF946968A2FFFFA1696869686968696869686968696869%68696869686968696869686968FFA834050C050B050C0559A86968696869%6869686968696869686968696869686968696869689AFFFFA1696893CAFF%FF9A8D68CAFFFFA18D698D688D698D688D698D688D698D688D698D688D69%8D688D698D68B6A2FFA8340B0C0B0C0B0CA8FF9A8D688D698D688D698D68%8D698D688D698D688D698D688D698D689BFFFFA18D6994FF706968A2FFFF%A16968696869686968696869686968696869686968696869686968696870%A8FF2E0B050C050B050C050B7DFF6F696869686968696869686968696869%68696869686968696869689AFFFFA169689A6968CAFFFFA18D6869688D68%69688D6869688D6869688D6869688D6869688D686968B6FF840B0C0B0C0B%0C0B0C0B0C0B0C84FF6869688D6869688D6869688D6869688D6869688D68%69688D6869689BFFFFA18D686869FFFFA169686968696869686968696869%68696869686968696869686968696869A859050B050C050B050C050B050C%0559FF696869686968696869686968696869686968696869686968696869%689AFFFF6F698D68FFFF8D688D698D688D698D688D698D688D698D688D69%8D688D698D688D698D6FFF2E0C0B0C0B0C0B0C0B0C0B0C59AEA8CA698D68%8D698D688D698D688D698D688D698D688D698D688D698D688D69FFFFBC69%6869FFFF6869686968696869686968696869686968696869686968696869%68696869FFAF0B0B050C050B050C050B050C2EA8FF9B6869686968696869%6869686968696869686968696869686968696869FFFF6F698D68FFFF8D68%69688D6869688D6869688D6869688D6869688D6869688D68696894CAFF58%0C0B0C0B0C0B0C0B0C0B0C0B0C0B59FFBD6869688D6869688D6869688D68%69688D6869688D6869688D686968FFFF9A686869FFFF6869686968696869%6869686968696869686968696869686968696869A8AE0B0B050C050B050C%050B050C050B050C0559A869686968696869686968696869686968696869%6869686968696869FFFF6F698D69FFFF8D698D688D698D688D698D688D69%8D688D698D688D698D688D698D6FFF2E0C0B0C0B342E0C0B0C0B0C0B0C0B%0C0B0C0CFF708D688D698D688D698D688D698D688D698D688D698D688D69%8D68FFFFBC686869FFFF6869686968696869686968696869686968696869%6869686968696869FF84050C59FFFFFF0C0C050B050C2EA8598359AFA869%6869686968696869686968696869686968696869686968696869FFFF6F69%6968FFFF69688D6869688D6869688D6869688D6869688D6869688D686968%8D689BFD04FF9ABCFF2E0B0C0B0C2EFFA8CAFFCA9A6F688D6869688D6869%688D6869688D6869688D6869688D6869688D68FFFFBC686869FFFF686968%69686968696869686968696869686968696869686968696869686F769B68%699AFF050B050C052EFF9468696869686968696869686968696869686968%69686968696869686968696869FFFF6F698D68FFFF8D688D698D688D698D%688D698D688D698D688D698D688D698DFD0AFF2E0C0B0C0B0C0B84FD09FF%A1688D698D688D698D688D698D688D698D688D698D688D69FFFFBC696869%FFFF68696869686968696869686968696869686968696869686968FD09FF%340C050B050C050B0559FD08FF9A69686968696869686968696869686968%69686968696869FFFF6F698D68FFFF8D6869688D6869688D6869688D6869%688D6869688D6869688DFFFF6FBDA1CBFFAE0C0C0B0C0B0C0B0C0B0C0B2E%83FFFFC46FA1FFA16869688D6869688D6869688D6869688D6869688D6869%68FFFF9A686869FFFF686968696869686968696869686968696869686968%69686968FD04FFA8592E050C050B050C050B050C050B050C0B59A8FFA1FF%9A6968696869686968696869686968696869686968696869FFFF6F698D69%FFFF8D698D688D698D688D698D688D698D688D698D688D698D688DFFFF59%2E0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C2EAEFFFF698D688D69%8D688D698D688D698D688D698D688D698D68FFFFBC686869FFFF68696869%6869686968696869686968696869686968696869A1FF2E0B050C050B050C%050B050C050B050C050B050C050B050C0534A8FF6F696869686968696869%686968696869686968696869FFFF6F696968FFFF69688D6869688D686968%8D6869688D6869688D6869688D9AFF2E0C0B0C0B0C0B0C0B0C0B0C0B0C0B%0C0B0C0B0C0B0C0B0C0B0C0B0C59FF9A69688D6869688D6869688D686968%8D6869688D68FFFFBC686869FFFF68696869686968696869686968696869%68696869686968FF590B050C050B05340B0B050C050B050C050B050C2E34%050C050B050C050B58FF6869686968696869686968696869686968696869%FFFF6F698D68FFFF8D688D698D688D698D688D698D688D698D688D698D68%C3A80C0B0C0B0C0CFFFFFF2E0C0B0C0B0C0B0C0B0C0B5983FFFFAE838459%592E83CA8D688D698D688D698D688D698D688D698D688D69FFFFBC696869%FFFF68696869686968696869686968696869686968696869A80C050B050C%59FD05FF840C050B050C050B050C050B84FFA1A8A8FD04FF9B6869686968%696869686968696869686968696869FFFF6F698D68FFFF8D6869688D6869%688D6869688D6869688D6869688D9AA80B0C0B83AFFFA8FD05FF0B0C0B0C%0B0C0B0C0B0C0B59FFFF9ACAFFA16869688D6869688D6869688D6869688D%6869688D686968FFFF9A686869FFFF686968696869686968696869686968%69686968696870FFA884FFFFC468CAFFFFA8830B0B050C050B050C050B05%0C05347DFFA8FFA869686968696869686968696869686968696869686968%69FFFF6F698D69FFFF8D698D688D698D688D698D688D698D688D698D688D%69BD9AC3FFFF76CAFFFF592E0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C%0CFD1AFFBC686869FFFF6869686968696869686968696869686968696869%6869686968FFFFFF8334050B050C050B050C050B050C050B050C050B050C%050B0CFD19FF6F696968FFFF69688D6869688D6869688D6869688D686968%8D6869688D686FFFAE0C0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B%0C0B0C0B0C2EFFCA6F688D6869688D6869688D6869688D6869688D686968%8D686869FFFF686968696869686968696869686968696869686968696894%A8A8050C050B050C050B050C050B050C050B050C050B050C050B050C050B%05AEA869686968696869686968696869686968696869686968698D68FFFF%8D688D698D688D698D688D698D688D698D688D698D68CAFF840B0C0B0C0B%0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0BFD18FF68%69FFFF686968696869686968696869686968696869686FA1FF8434050B05%0C050B050C050B050C050B050C050B050C050B050C050B050C050B050C2E%FD17FF8D68FFFF8D6869688D6869688D6869688D6869688D686FCAAF2E0C%0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B5959590B0C0B0C0B0C%0B0C0B0CFD17FF6869FFFF686968696869686968696869686968696869A1%A8050C050B050C050B050C050B050C050B050C050B050C050B84FFFF8405%0C050B050C050B05A8FD16FF8D69FFFF8D698D688D698D688D698D688D69%8D688D69FF2E0C0B0C0B0C0B0C0B0C0B5983A82E0C0B0C0B0C0B0C0B0C0B%AFFD04FF84592E592E0C0B0CA8FD16FF6869FFFF68696869686968696869%6869686968696869FF34050C050B05345984A8FFCAA8A1AF050B050C050B%050C050B84A168709ACBFD05FFAF84FF9A69686968699AFD0FFF6968FFFF%69688D6869688D6869688D6869688D686968FF83345984A8FFFFFFA8A16F%8D68C4A80C0B0C0B0C0B0C0B0C0B84A88D686968B668696FBC9AA19A9468%69688D68699AFD0EFF6869FFFF6869686968696869686968696869686968%696FFFFFCAA1A16FFFFFCAA1CAA1CAFF34050C050B050C050B050C0BFFA1%CAA1CAA1CAA1CAA1CAA1CAA1CAA1CAA19B686970FD0DFF8D68FFFF8D688D%698D688D698D688D698D688D698D688D698D688D698DFD07FF840B0C0B0C%0B0C0B0C0B0C0B0C59FD12FFBD688D9AFD0CFF6869FFFF68696869686968%696869686968696869686968696869686968A19AA19AA1A8A8050B050C05%0B050C050B050C050B34FFA8A19AA19AA19AA19AA19AA19AA1A8FFFF9B68%699AFD0BFF8D68FFFF8D6869688D6869688D6869688D6869688D6869688D%6869688D6869688D9AFF0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C2EAFFFA1%688D6869688D6869688D6869A1FFFFC4688D9AFD0AFF6869FFFF68696869%686968696869686968696869686968696869686968696870A1FF340B050C%050B050C050B050C050B050C050B0559A8CB686968696869686968696869%A1FFFFA2686994FD09FF8D69FFFF8D698D688D698D688D698D688D698D68%8D698D688D698D68B6A1FFFFAF2E0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B%0C0B0C0B2E83FF708D688D698D688D698D688DA1FFFFCA698D9AFD08FF68%69FFFF6869686968696869686968696869686968696869686968A2FFA858%0C050C050B050C050B050C050B050C050B050C050B050C050B7DFF686968%696869686968696869A1FFFFA2686969FD07FF6968FFFF69688D6869688D%6869688D6869688D6869688D686968FFA8340B0C0B0C0B0C0B0C0B0C0B0C%0B0C0B0C0B0C0B342E0C0B0C0B0C0B2EFFBC6869688D6869688D6869688D%A1FFFFCA68696FFD06FF6869FFFF68696869686968696869686968696869%6869686968A2A80C050B050C050B050C050B050C050B050C050B050C59FF%FFFFA8A884FFFFCA686968696869686968696869686994FFFFA2686969FD%05FF8D68FFFF8D688D698D688D698D688D698D688D698D688D698DA8A82E%595984A8FF7D590B0C0B0C0B0C0B0C0B0C0B0C0B2EFFCA70BD9AC39BBD68%8D698D688D698D688D698D688D698D9AFFFFCB688D6FFD04FF6869FFFF68%6968696869686968696869686968696869686968CAFFFFFFCAA1CA9ACAFF%34050B050C050B050C050B050C057DA89468696869686968696869686968%69686968696869686970FFFFCA68696FFFFFFF8D68FFFF8D6869688D6869%688D6869688D6869688D6869688D6F6F688D6869688D6FFF2E0C0B0C0B0C%0B0C0B0C0B0C0B0C0B84FFC36869688D6869688D6869688D6869688D6869%688D68699AFFFFCB688D6FFFFF6869FFFF69696869686968696869686968%6968696869686968696869686968696894FF0B050C050B050C050B050C05%0B050C0558A8FF6F69686968696869686968696869686968696869686970%FFFFCA68696FFF8D69C4FFFF6F8D688D698D688D698D688D698D688D698D%688D698D688D69CAFFFFFFAE0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B2E%7DFFA1BC6F8D688D698D688D698D688D698D688D698D688D94FFFFFF698D%69706968A2FFFF6F6968696869686968696869686968696869686968CAFF%FFFF592E340B0B050C050B050C050B050C050B050C050B050C0BA8FFFFCA%A86F69686968696869686968696869686968696FFFFFCB6869FF9A8D68C4%FFFF6F69688D6869688D6869688D6869688D68696FFFFF842E2E0B0C0B0C%0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C2E597DFFA8946869%688D6869688D6869688D6869688D6FFFFFBC68FFFF706968A2FFFF6F6968%69686968696869686968696870A1FF590C050B050C050B050C050B050C05%0B050C050B050C050B050C050B050C050B050C0BAF766968696869686968%696869686968696869FFFF6F69FFFFFF9A8D68CAFFFF6F8D698D688D698D%688D698D68B6FFAF2E0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C%0B0C0B0C0B0C0B0C0B0C0B0C0B0CA8C3698D688D698D688D698D688D698D%688D69FFFFBC69FD04FF9A6968A2FFFF6969686968696869686968696FFF%0B0C050C050B050C052E7D34050B050C050B050C050B050C057D84840B0B%050C050B050C7DFF686968696869686968696869686968696869FFFF6F69%FD05FF9A6968CAFFFF6F8D6869688D6869688D6869A8FF840C0B0C0B0C2E%84FFFF590C0B0C0B0C0B0C0B0C0B0C0B0CFFC4CAFF832E0B0C0B0C7DFF6F%69688D6869688D6869688D6869688D686968FFFF9A68FD06FF946968A2FF%FF6969686968696869689BCAFF7D2E050B0B59A8FFA8FFA80B050C050B05%0C050B050C050B05FF6F696FCAA859050C7DFF6869686968696869686968%696869686968696869FFFF6F69FD07FF9A8D69C4FFFF6F8D688D698D688D%FFA80C0C2E59A8FFCAC49AFF842E0B0C0B0C0B0C0B0C0B0C0B0C0B0CA8CA%688D69C3FD04FF6F8D698D688D698D688D698D688D698D688D698D68FFFF%BC68FD08FF706968A2FFFF6F696869686968CAA8A8A8FFA8A2A1A1A8FF7D%0C050B050C050B050C050B050C050B0534A89B686968696F946869686968%6968696869686968696869686968696869FFFF6F69FD09FF9A8D68C4FFFF%6F69688D686968C39A9B6FC3FFFFFFAE2E0C0B0C0B0C0B0C0B0C0B0C0B0C%0B0C0B0C0B59FFA1688D6869688D6869688D6869688D6869688D6869688D%6869688D68FFFFBC68FD0AFF706968A2FFFF6F6968696869686968CAFFA8%2E0B050C050B050C050B050C050B050C050B050C050B0534A8CB6F696869%68696869686968696869686968696869686968696869FFFF6F69FD0BFF9A%8D68CAFFFF949A949A6F9A94CAFF840B0C0B0C0B0C0B0C0B0C0B0C0B0C0B%0C0B0C0B0C0B0C0B0C0B2E59FFFFFFCACA9A8D688D698D688D698D688D69%8D688D698D688D69FFFFBC69FD0CFF9A6968A2FD09FF84050C050B050C05%0B050C050B050C050B050C050B050C050B050C050B0534585959FFA16968%6968696869686968696869686968696869FFFF6F69FD0DFF9A6968C4A8CA%A8CAA8CAA8FF595959AEFFA80B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C%0B0C0B0C0B0C0B0C0B0C2EFF6F69688D6869688D6869688D6869688D6869%68FFFF9A68FD0EFF94696869686968696869A1FFFFCAA1FF590B050C050B%050C050B050C050B050C050B050C050B050C050B050C052EFF9468696869%6869686968696869686968696869FFFF6F69FD0FFF9A8D698D688D698D68%8D698D68B6FF590B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B%0C0B0C0B2EA8CA698D688D698D688D698D688D698D688D698D68FFFFBC68%FD1EFF050B050C050B050C050B050C050B050C050B050C050B050C050B05%0CA8CA6869686968696869686968696869686968696869FFFF6F69FD1DFF%2E0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0BFF%FFC4688D6869688D6869688D6869688D6869688D68FFFFBC68FD1CFF2E0B%050C050B050C050B050C050B050C050B050C050B050C050B050C050B0559%84FF9A6968696869686968696869686968696869FFFF6F69FD1BFF0B0C0B%0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B%0C34FFA18D688D698D688D698D688D698D688D69FFFFBC69FD19FFA8050C%050B050C050B050C050B050C050B050C050B050C050B050C050B050C050B%050C050B0CFF6F696869686968696869686968696869FFFF6F699A93946F%9A93946F9A93946F9A93946F9A93946F9A93C3FF7D0B0C0B0C0B0C0B0C0B%0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C59%FF6869688D6869688D6869688D686968FFFF9A6868696869686968696869%686968696869686968696894CA59050C050B050C050B050C050B05A88434%050C050B050C0B0C050C050B050C050B050C050B050C050BA89B68696869%68696869686968696869FFFF6F698D69C39AC39BC39AC39BC39AC39BC39A%C39BC39AC3CBA80B0C0B0C0B0C0B0C0B0C0B0C0B84FFFFFF340B0C0B0C0B%83A8590B0C0B0C0B0C0B0C0B0C0B0C0B0C0B84CA8D688D698D688D698D68%8D698D68FFFFBC686869FD14FF0B0B050C050B050C050B050C0559FD04FF%830C050B050C59FFFFFF84A884A8597D340C050B050C050B0BFF6F696869%68696869686968696869FFFF6F696968FFFFCAA2CAA8CAA2CAA8CAA2CAA8%CAA2CAA8FF590C0B0C0B0C0B0C0B0C0B0C0B59FD06FF0B0C0B0C0B83FD06%FFA8CAA8FFAF7D0B0C0B0C0B0CA8C36869688D6869688D6869688D68FFFF%BC686869FFFF686968696869686968696869686968A1A80B050C050B050C%050B053459A8FD07FF0B050C050B59FD06FFCA6894FFFFA8AE2E0B050C05%84A169686968696869686968696869FFFF6F698D68FFFF8D688D698D688D%698D688D698D68B6FF590B0C0B0C0B0C0B0C0B84FFFFA1CAFD06FF2E0C0B%0C0BAFFD06FFA88D70FFFFB6A2FF590C0B0C59CA698D688D698D688D698D%688D69FFFFBC696869FFFF68696869686968696869686968696FFF0B0B05%0C050B050C2EA8CAFF6F699AFD06FF34050C050B84FD06FFCA6894FFFF68%699AFF84590B847669686968696869686968696869FFFF6F698D68FFFF8D%6869688D6869688D6869688D68CB7D0C0B0C0B5984FFFFFFA8CAFFBC68A1%FD06FF2E0C0B0C0BA8FD06FFA8696FFFFF69688D6FC4FFFFFF94688D6869%688D6869688D686968FFFF9A686869FFFF68696869686968696869686968%70FF2E050C0BA8FFA276946869A1FF6F699AFD06FF34050B050C84FD06FF%CA6894FFFF6869686968696F696869686968696869686968696869FFFF6F%698D69FFFF8D698D688D698D688D698D688D70FF0B0C0B83FFB6698D688D%69CAFFBC699BA8CACACAA8FF2E0C0B0C0BAEA8CACACAA8CAA18D6FFFFF8D%688D698D688D698D688D698D688D698D688D698D68FFFFBC686869FFFF68%69686968696869686968696894FF592E84FF9B686968696869A2FF6F6968%6968696869FF34050B050C84A16869686968696894FFFF68696869686968%696869686968696869686968696869FFFF6F696968FFFF69688D6869688D%6869688D686968C4FFFFA1BC6869688D686968CAFF9A688D6869688D68FF%2E0C0B0C0BAE9A69688D6869688D6FFFFF8D6869688D6869688D6869688D%6869688D6869688D68FFFFBC686869FFFF68696869686968696869686968%69686968696869686968696869A1FD0AFF34050C050B84FD0BFF68696869%686968696869686968696869686968696869FFFF6F698D68FFFF8D688D69%8D688D698D688D698D688D698D688D698D688D698D68CAFD0AFF2E0C0B0C%0BA8FD0BFF8D698D688D698D688D698D688D698D688D698D688D69FFFFBC%696869FFFF68696869686968696869686968696869686968696869686968%6969946F946F946F946FBDFF34050C050B59CB6F946F946F946F946F9468%696869686968696869686968696869686968696869FFFF6F698D68FFFF8D%6869688D6869688D6869688D6869688D6869688D6869688D6869688D6869%688D68696FFF2E0C0B0C0B83A88D6869688D6869688D6869688D6869688D%6869688D6869688D6869688D686968FFFF9A686869FFFF68696869686968%6968696869686968696869686968696869686968696869686968696894FF%0C050B050C59CA6869686968696869686968696869686968696869686968%696869686968696869FFFF6F698D69FFFF8D698D688D698D688D698D688D%698D688D698D688D698D688D698D688D698D688D698D6FFF0B0C0B0C0B83%A88D698D688D698D688D698D688D698D688D698D688D698D688D698D688D%698D68FFFFBC686869FFFF68696869686968696869686968696869686968%6968696869686968696869686968696894FF0C050B050C59CA6869686968%696869686968696869686968696869686968696869686968696869FFFF6F%696968FFFF69688D6869688D6869688D6869688D6869688D6869688D6869%688D6869688D6869688D6FFF0B0C0B0C0B83A869688D6869688D6869688D%6869688D6869688D6869688D6869688D6869688D68FFFFBC686869FFFF68%696869686968696869686968696869686968696869686968696869686968%6968696894FF0B050C050B59CA6869686968696869686968696869686968%696869686968696869686968696869FFFF6F698D68FFFF8D688D698D688D%698D688D698D688D698D688D698D688D698D688D698D688D698D688D70FF%0B0C0B0C0B59CA8D688D698D688D698D688D698D688D698D688D698D688D%698D688D698D688D69FFFFBC696869FFFF68696869686968696869686968%6968696869686968696869686968696869686968696894FF0B050C050B2E%FF6869686968696869686968696869686968696869686968696869686968%696869FFFF6F698D68FFFF946869688D6869688D6869688D6869688D6869%688D6869688D6869688D6869688D68699AFF0B0C0B0C0B0CFFBD6869688D%6869688D6869688D6869688D6869688D6869688D6869688D686969FFFF9A%686869A1FFA8936869686968696869686968696869686968696869686968%69686968696869686968A27D0C050B050C05A89A69686968696869686968%6968696869686968696869686968696869686968CAFFFF68699B698DA1FF%FF94688D698D688D698D688D698D688D698D688D698D688D698D688D698D%688D69B6FF590B0C0B0C0B0C59FF698D688D698D688D698D688D698D688D%698D688D698D688D698D688D69CAFFFF708D69FF9A6869A1FFCA93686968%696869686968696869686968696869686968696869686968696FCBFFA805%0C050B050C050CA89B686968696869686968696869686968696869686968%696869686968CAFFFF6F6968CAFFFF9B6869A1FFFF94688D6869688D6869%688D6869688D6869688D6869688D686968B6CAFF7D340B0C0B0C0B0C0B0C%0B83FFB66869688D6869688D6869688D6869688D6869688D6869688D69CA%FFFF6F6969CBFD04FF9A6869A8FFCA936869686968696869686968696869%68696869686968696870A884050B050C050B050C050B050C05A8FFA16869%686968696869686968696869686968696869686968CAFFFF686968CAFD06%FF9B68B6CAFFFF94698D688D698D688D698D688D698D688D698D688D698D%A8A80B0C0B0C0B0C0B0C0B0C0B0C0B0C0B59AEFF6F8D698D688D698D688D%698D688D698D688D698D69FFFFFF6F8D69CAFD08FF9A686FA8FFA8946869%6869686968696869686968696869686968696FFF050C050B050C050B050C%050B050C050B050C59FF76696869686968696869686968696869686968CA%FFFF6F6968CAFD0AFF9A6894CAFFCA946869688D6869688D6869688D6869%688D686968CA7D0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C59FF9A8D%6869688D6869688D6869688D686969CBFFFF6F8D69CAFD0CFF9A6869A8FF%A8936869686968696869686968696869686968A1A82E050B050C050B050C%050B050C050B050C050B050C34FFA8A168696869686968696869686968CA%FFFF6F6968CAFD0EFF9B6994A8FFFF94688D698D688D698D688D698D68BD%A2FFFF590B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B83A8FF%A8B6698D688D698D688D69CAFFFF708D69FD11FF9A6869A8FFA869686968%6968696869686968CAA884590C050C050B050C050B050C050B050C050B05%0C050B050C050B050C0B84A89468696869686968C3FFFF6F6968CAFD12FF%9B686FA8FFCA93688D6869688D686968FFA82E0B0C0B0C0B0C0B0C0B0C0B%0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0B0C0BA8A18D6869688D68C4FF%FF6F6969CBFD14FF9A6869A8FFA86968696869686968A1A80C050B050C05%0B050C050B050C050B050C050B050C050B050C050B050C050B050C2EFF68%69686968A1FFFF686968CAFD16FF9B68B6CAFD35FF6F8D69CAFD18FF9468%6FA8FD33FF6F6968CAFD1AFF94688D6869688D6869688D6869688D686968%8D6869688D6869688D6869688D6869688D6869688D6869688D6869688D68%69688D6869688D69CAFD1BFFCA9368696869686968696869686968696869%686968696869686968696869686968696869686968696869686968696869%68696869686968CAFD0DFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.2 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 50 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 40 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/channelcount 0 def	/sourcecount 0 def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIDataProc null def	/XIVersion 6 def	/XIColorSpace /DeviceGray def	/XIColorValues 0 defendcurrentdict /_colorimage known not {	/colorimage where {		/colorimage get /_colorimage exch def	}{		/_colorimage null def	} ifelse} if/_image systemdict /image get def/_currenttransfer systemdict /currenttransfer get def/FourEqual {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/TestPlateIndex {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 FourEqual { 				/plateindex 0 def			}{				0 1 0 0 FourEqual { 					/plateindex 1 def				}{					0 0 1 0 FourEqual {						/plateindex 2 def					}{						0 0 0 1 FourEqual { 							/plateindex 3 def						}{							0 0 0 0 FourEqual {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/clrspaceissepn {	type /arraytype eq } def/clrspacegetname {	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse} def/clrspacegetalt {	aload pop pop pop colormake} def/clrspacegetcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/clrspacemarksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				/findcmykcustomcolor where {					pop					dup length 2 sub get					0.1 0.1 0.1 0.1 5 -1 roll					findcmykcustomcolor 1 setcustomcolor					systemdict /currentgray get exec					1 ne				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/colormake {	dup clrspacegetcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/colorexpand {	dup clrspacegetname exch	dup clrspaceissepn {		clrspacegetalt		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				clrspacegetalt colortint colortocmyk			} ifelse		} ifelse	} ifelse} def/makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/WalkRGBString {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/WalkCMYKString{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/StuffRGBIntoGrayString{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/StuffCMYKIntoGrayString{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/RGBToGrayImageProc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		dup length 3 idiv string		dup 3 1 roll 				/StuffRGBIntoGrayString load exch		WalkRGBString end} def/CMYKToGrayImageProc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		dup length 4 idiv string		dup 3 1 roll 				/StuffCMYKIntoGrayString load exch		WalkCMYKString end} def/SeparateCMYKImageProc {		Adobe_ColorImage_AI6_Vars begin		sourcecount 0 ne {			sourcearray plateindex get exec		}{						sourcearray 0 get exec						dup length 4 idiv string						0 2 index						plateindex 4 2 index length 1 sub {				get 255 exch sub								3 copy put pop 1 add								2 index			} for			pop pop exch pop		} ifelse end} def	/ColorImageCompositeEmulator {	pop true eq {		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat	}{		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {			Adobe_ColorImage_AI6_Vars begin				sourcearray 0 3 -1 roll put							channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse				load		 end		} if		image	} ifelse} def/colorimage {	Adobe_ColorImage_AI6_Vars begin		/channelcount 1 index def		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def		4 sourcecount add index end		dup 8 eq exch 1 eq or not {		/_colorimage load null ne {			_colorimage		}{			Adobe_ColorImage_AI6_Vars /sourcecount get			7 add { pop } repeat		} ifelse	}{		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {			/_colorimage load null eq {				ColorImageCompositeEmulator			}{				dup 1 eq {					pop pop image				}{					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {						gsave												0 _currenttransfer exec						1 _currenttransfer exec						eq						{ 0 _currenttransfer exec 0.5 lt }						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse												{ { pop 0 } } { { pop 1 } } ifelse						systemdict /settransfer get exec					} if										_colorimage										Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {						grestore					} if				} ifelse			} ifelse		}{			dup 1 eq {				pop pop				image			}{				pop pop				Adobe_ColorImage_AI6_Vars begin					sourcecount -1 0 {									exch sourcearray 3 1 roll put					} for					/SeparateCMYKImageProc load			 end				systemdict /image get exec			} ifelse		} ifelse	} ifelse} def/proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace clrspacegetcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] makeimagedict _image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] makeimagedict _image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} stringapply			} concatprocs _image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} stringapply			} concatprocs false _pticomps			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse		} ifelse	} ifelse} def/graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray proctintimage} def/cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK proctintimage} def/rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB proctintimage} def/tintimage {	TestPlateIndex -1 eq {		colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop graytintimage		}{			dup /DeviceRGB eq {				pop rgbtintimage			}{				pop cmyktintimage			} ifelse		} ifelse	}{		dup clrspacemarksplate {			plateindex 5 lt {				colortocmyk plateindex get 1 exch sub				exch {1 0}{0 1} ifelse () graytintimage			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage			} ifelse		}{			pop pop pop			{pop 1} 0 1 () /DeviceGray proctintimage		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	0 setgray	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace tintimage} def/XIImage {	0 setgray	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				XIType 1 eq {			/_lp /null ddef			_fc			/_lp /imagemask ddef		}		if		/XIVersion 7 def end} def/XH {	Adobe_ColorImage_AI6_Vars begin		/XIVersion 6 def		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEncoding 0 ne XIVersion 6 le and {			currentfile 128 string readline pop pop		} if		XICompression 0 eq {			/XIBuffer1 XIRowBytes string def			XIEncoding 0 eq {				{currentfile XIBuffer1 readhexstring pop}			}{				{currentfile XIBuffer1 readstring pop}			} ifelse		}{			/XIBuffer1 256 string def			/XIBuffer2 XIRowBytes string def			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}			/ASCIIHexDecode filter /DCTDecode filter			/XIFile exch def			{XIFile XIBuffer2 readstring pop}		} ifelse		/XIDataProc exch def				XIVersion 6 le {			0 0 moveto			XIImageMatrix concat			XIImageWidth XIImageHeight scale			XIType 1 eq {				/_lp /null ddef				_fc				/_lp /imagemask ddef			} if		} if		XIEnable {			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)%%Version: 1.2 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 107 dict dup beginput/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 95 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XA{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/_rgbtocmyk{3	{	1 exch sub 3 1 roll	} repeat3 copy 1 4 1 roll3	{	3 index 2 copy gt		{		exch		} if	pop 4 1 roll	} repeatpop pop pop4 1 roll3	{	3 index sub	3 1 roll	} repeat4 -1 roll} def/Xx{	exch	/_gf exch ddef	0 eq	{		findcmykcustomcolor	}	{		/findrgbcustomcolor where not {			4 1 roll _rgbtocmyk			5 -1 roll			findcmykcustomcolor		}		{			pop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq	{		findcmykcustomcolor	}	{		/findrgbcustomcolor where not {			4 1 roll _rgbtocmyk			5 -1 roll			findcmykcustomcolor		}		{			pop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer readline not		{		stop		} if		endString eq		{			cleartomark stop		} if	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer readline not		{		stop		} if		dup beginString eq		{			pop /layerCnt dup load 1 add store		}		{			endString eq			{				layerCnt 1 eq				{					cleartomark stop				}				{					/layerCnt dup load 1 sub store				} ifelse			} if		} ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	4 npop	6 1 roll	pop	4 1 roll	pop pop pop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popendendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb1 1 1 1 k([Registration]) Pc1 1 1 1 k([Registration]) Pc([Registration]) Pc([Registration]) Pc0 0 0 0 k(White) Pc0 0 0 1 k(Black) Pc1 0 0.6 0.38 (PANTONE 3298 CVC) 0 x(PANTONE 3298 CVC) Pc0 1 0.65 0.34 (PANTONE 201 CVC) 0 x(PANTONE 201 CVC) PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 0 79 128 255 Lb(Layer 1) Ln0 Auu0 O0 1 0.65 0.34 (PANTONE 201 CVC) 0 x100 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:1 D0 XR261.2563 445.0591 m261.2563 394.4922 L278.4458 377.2988 L319.5352 377.3008 l319.5352 359.7422 l298.4111 359.7422 l298.4111 371.1934 l261.293 371.1934 L261.293 343.5488 L278.5557 326.1504 L335.1748 326.1504 L352.3652 343.3281 L352.3652 394.4785 L334.8496 411.4053 L297.1392 411.4053 l297.1401 430.2349 l318.0088 430.2354 l318.0078 417.2583 L352.3633 417.2578 L352.3652 445.0396 L333.1279 464.7192 L281.0435 464.7192 L261.2563 445.0591 Lf1 g263.5181 444.0347 m263.5181 395.3853 L279.3652 379.5352 L317.6836 379.5352 321.7969 379.5371 V321.7969 376.0664 321.7959 360.8652 321.7949 357.3965 C318.2031 357.3965 299.688 357.3965 296.0928 357.3945 C296.0933 360.3242 296.0942 368.8457 Y263.5552 368.8467 L263.5552 344.4629 L279.4521 328.3828 L334.21 328.3828 L350.0469 344.2305 L350.0469 393.5029 L333.8447 409.0581 L298.9233 409.0586 294.8188 409.0586 V294.8203 412.5747 294.8208 428.9531 294.8193 432.4688 C298.4072 432.4688 316.6855 432.4688 320.2695 432.4688 C320.2695 429.3643 320.2695 419.4946 Y350.0469 419.4946 L350.0469 444.0239 L332.1572 462.3716 L281.938 462.3716 L263.5181 444.0347 Lf0 1 0.65 0.34 (PANTONE 201 CVC) 0 x0 D282.8735 459.917 m265.8228 442.9004 l265.8228 396.167 l280.3267 381.6602 l324.0986 381.6602 l324.0977 354.9375 l293.8154 354.9375 l293.8154 366.3906 l265.8564 366.3887 l265.8569 345.2666 l280.3901 330.5098 l333.2842 330.5098 l347.7676 345.0264 l347.7695 392.4121 l332.8828 406.6035 l292.5415 406.604 l292.5405 434.5962 l322.5742 434.5962 l322.5742 421.6172 l347.7676 421.6172 l347.7695 442.8999 l331.2266 459.9165 l282.8735 459.917 lf315.6348 388.0488 m315.6348 388.042 315.6152 388.0039 315.5391 387.9219 C315.5742 387.959 315.6074 388.0039 315.6348 388.0488 CfUu*u0 0 0 0 k1 D308.0449 462.3228 m307.0859 462.27 306.5879 461.9126 306.3843 461.5864 c306.1558 461.2188 306.0469 460.9243 306.0513 460.5537 c306.0547 460.2813 306.1123 460.0376 306.1714 459.813 C305.8076 459.1104 305.3037 458.0195 305.2583 458.0137 C304.8574 458.0103 304.8755 458.0122 V303.3657 457.9761 303.1216 457.3193 302.8291 456.7578 c302.6489 456.4102 302.5825 456.0532 302.5869 455.7134 c302.5962 454.7886 303.1206 453.4976 303.2583 453.3013 C303.5156 452.9331 303.623 452.7808 V301.2485 451.1655 301.3486 449.6196 301.3613 448.563 c301.3647 448.2871 301.4399 448.019 301.5815 447.7524 c301.7349 447.4663 301.9536 447.2725 302.1978 447.1157 C302.1123 447.0293 302.0278 446.9438 301.9463 446.8569 C300.1147 445.4497 298.0454 444.1548 297.9956 442.4502 C297.9541 442.2954 298.2588 441.3101 298.457 441.0762 c298.4614 441.0708 298.4688 441.0688 298.4731 441.0635 C297.2163 440.439 295.8721 439.2896 295.8887 437.8813 c295.8887 437.8306 295.8911 437.7788 295.896 437.7271 c296.0371 435.9722 298.1836 435.2739 298.8384 435.1021 C299.3921 434.9561 L299.8833 435.25 L301.7427 436.3633 302.894 436.6294 303.5317 436.6777 C303.5332 436.6533 303.5415 436.6255 303.5415 436.6021 c303.5791 433.3818 299.0264 431.981 298.834 431.9185 C299.063 431.9722 L293.0801 431.1177 290.7603 426.6704 290.3091 425.6714 C289.3569 424.6348 289.0527 423.7358 289.0605 423.0435 c289.0732 422.0811 289.6294 421.5049 289.6704 421.4639 C289.8257 421.3086 L290.0234 421.2075 L292.0962 420.1724 296.2407 422.5249 298.5259 424.0186 C298.645 424.0962 L298.7437 424.1958 L299.0444 424.4971 299.4868 424.8501 299.8892 424.8252 c300.3262 424.7983 300.688 424.3457 300.6919 424.3408 C300.9312 424.0342 L301.3105 423.8813 L301.7954 423.7026 302.0903 423.5498 302.2944 423.4272 C301.3604 423.1436 299.2339 422.2993 294.0161 419.7954 C293.5962 419.5947 L293.3882 419.1782 L292.7896 417.978 290.396 416.6138 289.0278 416.0361 c286.8457 415.0879 285.5664 413.8442 285.2148 412.3335 c285.145 412.0303 285.1152 411.7412 285.1182 411.4678 c285.1353 410.1313 285.8911 409.1899 285.9941 409.0688 C286.3174 408.688 L286.8091 408.606 L288.1387 408.3843 294.6958 409.8403 298.4868 410.7285 C298.5786 410.7495 L298.6675 410.7847 L300.2744 411.4072 300.7783 411.1851 300.8369 411.1548 C300.8521 411.0044 300.8774 410.7446 Y300.9912 410.6475 301.1021 410.5513 V300.9673 409.875 299.7881 408.2231 298.4805 406.9106 C298.2393 406.6699 L298.1396 406.3418 L297.7939 405.1904 296.3682 404.4736 295.8486 404.2939 C295.9546 404.3247 L288.5664 402.479 288.4868 399.6055 288.6372 398.7681 C288.8584 397.5542 L295.5752 398.1138 L295.9092 398.3999 L296.3169 398.7495 296.4365 398.6255 296.5337 398.5273 C296.8013 398.2515 L297.2183 398.1123 L297.6895 397.9956 298.1519 397.8794 V298.1538 397.8364 298.1665 397.8223 298.167 397.7739 c298.1743 397.2012 298.0356 396.2905 297.8032 395.3774 C296.8135 395.3774 294.3047 395.3774 Y294.1724 394.5781 294.1392 394.3711 V293.9375 394.2402 293.5591 394.0996 293.1079 394.0947 C293.1079 394.0947 L291.5117 394.7617 289.8838 393.041 289.6899 392.8477 C289.5552 392.7119 L289.3872 392.4629 289.3696 392.4316 V289.2119 392.1934 288.4517 391.7842 287.75 391.4697 C287.9771 391.5488 L286.6011 391.2031 286.1953 390.4619 286.0981 389.8984 c286.0801 389.79 286.0723 389.6855 286.0728 389.5811 c286.0806 388.9229 286.4727 388.3779 286.9204 388.0107 C285.8296 387.7314 284.1948 387.3145 284.2119 385.8379 c284.2129 385.8008 284.2139 385.7656 284.2173 385.7266 c284.251 385.1992 284.5313 384.7324 284.9858 384.4492 c285.499 384.1299 286.8618 383.2783 297.6587 387.7129 C297.7139 387.7344 297.7671 387.7578 V297.4868 387.4746 297.1665 387.1895 296.8052 386.9434 C296.6519 386.8418 L296.5288 386.6992 L295.5747 385.5859 293.8218 385.126 293.8042 385.1211 C293.9248 385.1445 L289.5562 384.4453 288.0894 382.501 287.6025 381.4023 c287.1699 380.4219 287.188 379.418 287.6489 378.7129 c288.1201 377.9883 288.2124 377.9307 293.1724 378.8223 C292.9365 378.1934 292.6958 377.207 292.27 376.4551 C291.958 376.1738 288.4517 373.0234 288.3125 372.8965 C283.6567 370.252 280.8667 361.6777 280.5601 360.6953 C280.5161 360.5508 L280.5024 360.4043 L280.4932 360.2793 280.4888 360.1592 280.4907 360.0469 c280.5044 358.8555 281.1255 358.2813 281.5156 358.0352 c282.9429 357.1445 285.0337 358.207 285.8677 358.7031 C286.1787 358.8887 L286.8149 360.0234 L287.5166 361.2129 289.5508 361.6055 290.3184 361.6631 C292.5171 361.3984 294.7202 363.4766 295.1611 363.9238 C295.2759 364.0381 L295.3584 364.1777 L295.5596 364.5146 295.8408 364.5596 295.9092 364.5664 C299.0342 364.1543 301.3159 367.5469 302.1177 368.9609 C302.8442 369.1523 303.4526 368.9824 304.0264 367.7998 c304.4126 367.0049 304.6582 364.5625 304.71 363.0791 C304.7095 363.0781 304.7114 362.3438 304.7114 362.3418 C304.7104 362.3477 304.5728 357.8027 Y304.4399 353.4287 L304.5532 353.583 304.564 353.5977 V304.5645 353.5898 304.5581 353.457 Y304.5571 353.4336 304.5117 351.1064 Y304.48 349.1592 304.4287 346.2168 304.3403 345.541 c303.9961 342.9434 303.5225 342.6426 303.3438 342.5313 C303.186 342.4355 302.6431 342.2168 302.2251 342.1074 c301.5747 341.9375 301.3408 341.8008 300.561 341.4707 c298.0928 340.4189 297.4019 338.6348 296.7427 337.0215 c296.4072 336.2021 295.998 335.5332 295.6089 335.2871 c294.332 334.4766 294.332 334.4766 293.8423 334.3965 C292.7949 334.1973 L290.4336 333.6758 289.2461 331.3516 289.1196 331.0898 C288.1724 329.1367 L328.3906 329.1543 L328.1855 330.918 L327.9824 332.8027 327.1436 334.0059 323.1152 335.3418 c321.3984 335.9121 321.0449 336.3262 320.459 337.0166 c319.7197 337.8838 318.8027 338.6328 315.8633 340.1289 c314.7373 340.7031 313.7246 343.1484 313.0898 346.2539 c312.7285 348.0215 312.8652 350.1016 312.8672 350.123 C312.8711 350.1934 L312.6582 356.2598 L312.6602 356.2197 312.6309 361.1396 Y312.6309 361.1211 312.6875 365.9512 312.7109 367.9111 C314.1191 367.0156 315.7793 366.8945 315.9961 366.8828 c316.0068 366.8828 321.1465 366.6719 Y321.2363 366.6797 L322.293 366.7734 325.3965 364.9473 327.6289 363.1797 C327.71 363.1152 L327.7988 363.0645 L329.3965 362.1523 331.3965 361.2383 332.7012 362.2822 c333.5537 362.9629 333.584 364.0938 333.3496 364.8535 C333.3984 364.6445 L332.0977 373.9492 326.7314 375.4746 325.8584 375.6621 C325.5547 375.7461 325.3574 375.8281 325.2402 375.8887 C325.2891 375.957 325.3457 376.0273 325.4004 376.0781 C325.3125 376.0039 L326.9258 377.2578 327.5898 378.5156 327.29 379.7412 c326.8398 381.5703 324.499 382.084 324.0332 382.168 C323.8164 382.208 L323.6006 382.1777 L321.3281 381.8535 318.7891 383.3564 318.5059 383.5273 C316.0605 385.3965 315.4004 386.8516 315.3916 387.6719 c315.3887 387.9023 315.4375 388.082 315.5117 388.208 C315.4746 388.1563 L315.6406 388.3906 L315.6602 388.4785 315.6816 388.5645 V316.4785 388.5586 318.5586 387.6494 320.3125 386.5127 C320.1563 386.6328 L322.1465 384.8896 324.3477 385.6895 325.2344 386.3574 C325.5771 386.6152 L325.6836 386.9512 325.7148 387.0488 V325.8496 387.3418 326.6641 388.1455 327.4219 388.7402 c328.5215 389.5781 328.8242 390.3984 328.8164 391.0537 c328.8135 391.2666 328.7773 391.4629 328.7266 391.6367 c328.1494 393.5684 324.8105 394.2598 321.9727 394.498 C321.5352 394.7617 319.9902 395.6914 Y317.5244 397.1416 316.0957 398.0469 315.2383 399.791 C316.9688 399.6333 318.5781 399.479 319.5137 399.3774 C320.5313 398.9395 322.543 399.2642 323.0898 399.5239 c323.8809 399.897 324.1514 400.5718 324.1445 401.1152 c324.1445 401.1494 324.1445 401.1831 324.1406 401.2153 c324.042 402.5298 322.3887 404.6191 319.5195 405.9043 c316.9551 407.0522 315.0127 409.5098 314.8379 410.1157 c314.6855 410.6387 314.6289 411.2104 314.623 411.752 c314.6172 412.3208 314.667 412.8452 314.7217 413.2563 C315.8809 413.2134 317.1406 411.7856 317.1543 411.7686 C317.6055 411.229 L318.3115 411.2827 L318.7666 411.3208 319.5996 410.9897 320.0195 410.7534 C320.54 410.4614 L321.1123 410.6445 L321.7637 410.8579 323.9531 410.5391 325.1309 410.3662 c327.1973 410.0645 327.957 409.6846 328.6113 410.8521 C328.7832 411.1206 L328.8594 411.4824 L329.2373 417.186 325.0332 419.2822 324.8574 419.3687 C324.4102 419.5869 L324.3418 419.5703 324.3066 419.5615 V324.0918 419.7949 323.7852 420.2461 323.582 420.6514 C322.5488 422.5078 320.5879 422.8403 319.1426 422.729 C318.6484 423.1309 318.0137 423.3579 317.3428 423.4419 C317.168 423.6323 317.1094 423.6963 316.9512 423.8691 C316.917 424.0776 316.875 424.2695 316.8154 424.4419 C317.0488 424.4092 317.2803 424.3774 317.5156 424.3442 c323.957 423.4424 324.7754 423.4204 325.4824 424.1313 c325.8906 424.5435 326.1055 425.0684 326.0996 425.6167 c326.0977 425.7554 326.082 425.8975 326.0508 426.0381 c325.5547 428.3247 320.3867 430.7144 316.1396 432.3164 c313.0508 433.4941 312.2461 434.73 312.0859 435.0361 C312.0723 435.1499 311.9551 435.3198 311.9551 435.4175 c311.9512 435.6904 312.0566 435.8174 312.1455 435.895 c312.4746 436.1763 313.2949 436.0884 314.1035 435.8301 C314.2559 435.7817 L314.418 435.7681 L317.0762 435.5674 318.3066 436.9531 318.6133 437.8032 C318.7773 438.2549 L318.6191 438.71 L318.0332 440.4043 316.708 441.5654 315.5039 442.1548 C315.6406 442.3369 316.3945 442.6392 316.3359 443.9277 c316.3115 444.4966 315.6211 445.9614 313.5508 447.3789 C315.0762 447.8853 313.5869 450.5552 311.7656 451.9829 C311.2793 452.354 311.21 452.4028 V312.2832 452.7153 312.8975 453.9634 313.0332 454.7837 c313.0527 454.9092 313.0625 455.0322 313.0605 455.1528 c313.0527 455.958 312.5713 456.6372 311.8438 456.8032 c310.5293 457.1045 310.0898 457.4312 309.9648 457.5474 C310.3008 457.5942 309.9697 459.4185 309.7461 459.7549 C309.7676 459.9331 309.9121 460.3511 309.9102 460.5337 c309.9023 461.1104 309.8281 461.478 309.4258 461.9058 c309.0586 462.2954 308.4512 462.3228 308.0449 462.3228 Cf/BBAccumRotation (0.011519) XT*UUu1 0 0.6 0.38 (PANTONE 3298 CVC) 0 x0 D311.3633 368.7676 m311.2715 361.1523 l311.3008 356.2324 l311.5127 350.2383 l311.3555 347.9854 311.7598 346.0049 v312.29 343.4014 313.3076 339.9268 315.248 338.9395 c320.6201 336.2061 318.5146 335.459 322.6865 334.0742 c326.9609 332.6543 326.7168 331.6377 326.8555 330.5098 c290.333 330.5098 l291.3013 332.4971 293.0884 332.8926 v294.8745 333.2861 294.3262 332.8828 296.3384 334.1621 c297.9771 335.2031 297.6909 338.793 301.0942 340.2412 c302.4805 340.8301 303.4316 340.998 304.0693 341.4023 c304.5269 341.6914 305.2607 342.1523 305.688 345.3828 c305.8311 346.458 305.8638 351.627 305.916 353.417 c306.1274 358.0508 l305.9321 357.7852 l306.0718 362.3652 l306.0688 363.1445 l305.9365 367 305.2505 368.4141 v304.563 369.8281 303.3413 371.0234 301.2036 370.1416 c298.8203 365.3184 295.875 365.9473 v294.8242 365.9492 294.1938 364.9004 v291.9551 362.625 290.2715 363.0459 v286.8887 362.8447 285.6436 360.7324 v285.5244 360.5293 285.1724 359.8916 y281.6484 357.7891 281.8594 360.3105 v284.728 369.5254 289.1455 371.8379 v293.3521 375.623 l295.7026 380.3848 294.2305 380.5977 v288.7876 379.4766 l288.9932 382.707 294.2515 383.5488 v296.2998 384.3643 297.5615 385.8359 v300.7173 387.9375 299.6646 389.6201 v298.6147 390.25 297.1426 388.9912 v285.6748 384.2813 285.5732 385.8359 v285.5156 386.7266 288.9404 386.6777 289.3613 387.7305 c289.3613 390.041 287.8877 388.9902 v286.6255 389.832 288.3066 390.252 v290.2017 391.0957 290.6226 391.9355 v291.8828 393.1953 292.937 392.7773 v295.2505 392.7764 295.4585 394.0391 v298.8237 394.0391 l300.0728 397.7695 299.2314 399.0317 v297.5479 399.4521 l296.4956 400.7134 295.0259 399.4521 v289.9771 399.0313 l289.5571 401.3472 296.2866 403.0283 v298.8101 403.8691 299.4424 405.9717 v303.647 410.1782 302.1763 411.4414 v301.9658 413.5435 298.1787 412.0728 v288.293 409.7573 287.0337 409.9678 v284.7202 412.7026 289.5571 414.8052 v293.5518 416.4868 294.604 418.5918 v302.2007 422.2349 303.0435 422.2354 v305.7759 423.7056 301.7808 425.1777 v300.0962 427.4927 297.7837 425.1777 v292.3149 421.6035 290.6323 422.4458 v289.793 423.2856 291.4741 424.9683 v293.3667 429.8066 299.2554 430.6484 v306.0337 432.6982 304.7334 437.9072 v303.1733 438.8257 299.186 436.437 v294.7192 437.9146 299.7822 440.1675 v301.2979 442.2231 l299.7529 441.1299 299.522 442.2778 v299.4067 442.8521 299.3638 443.666 300.9624 444.4546 c303.02 445.4692 302.5342 446.394 304.9692 446.5044 c305.2998 446.9771 305.0903 447.5083 V302.7471 447.7871 301.6299 450.7378 305.7246 452.5293 c306.1416 454.2588 l304.3726 454.1016 l302.8911 456.7729 305.7329 456.7192 v307.0469 458.0313 307.5039 459.937 v306.7778 461.0635 308.0391 461.064 v308.8906 461.4385 308.4717 459.5469 v308.9805 458.4634 308.9805 457.4141 v308.458 456.2061 311.541 455.5 v311.8682 455.4253 311.8799 453.2271 309.7764 453.4385 c309.0889 452.063 311.0762 450.4946 v314.3613 447.4453 311.3809 447.2788 v315.9648 444.3569 314.6465 443.0396 V314.0742 442.4663 312.2979 443.2681 312.1328 442.9424 c311.8926 442.4639 311.9863 442.2256 312.6133 441.9648 c313.1396 441.7441 316.4307 440.9028 317.3359 438.2866 c316.8594 436.9673 314.5215 437.1455 v310.1074 438.77 310.7363 434.7744 v311.2441 432.7505 315.6602 431.0669 v326.4102 427.0122 324.5195 425.1104 v324.0137 424.6021 315.0313 426.231 313.3457 426.231 c313.1357 424.9683 l315.6602 425.6001 315.6602 423.2861 v316.6895 422.168 l318.3701 422.168 318.582 421.3262 v321.3135 421.9575 322.3672 420.0625 v323.4189 417.9614 324.2588 418.1699 v327.7754 416.4438 327.4551 411.584 V327.2344 411.2261 322.3242 412.4927 320.6904 411.9565 c319.3008 412.75 318.2012 412.6587 v315.8428 415.5171 313.5352 414.3862 v312.9297 411.8384 313.5352 409.7578 v313.8652 408.6201 316.1934 405.9253 318.9648 404.6846 c321.6074 403.502 322.7402 401.7363 322.7852 401.1333 c322.8477 400.3188 320.5137 400.5806 320.1543 400.6626 c319.7949 400.7451 313.3242 401.3457 y313.3496 400.7485 313.6953 399.8433 v314.918 396.6313 317.4375 395.7593 321.5391 393.1953 c330.1641 392.5654 326.5879 389.832 v324.6279 388.3047 324.418 387.4639 v322.7383 386.1992 321.0527 387.6738 v314.8086 391.7256 314.3877 388.9883 v312.4688 386.4258 317.7266 382.4326 v320.8477 380.4336 323.792 380.8535 v328.2637 380.041 324.4785 377.0967 v322.3779 375.2012 325.5313 374.3633 v330.7891 373.5186 332.0527 364.4785 v332.8906 361.7422 328.4736 364.2656 v323.4277 368.2627 321.1143 368.0527 v316.0645 368.2627 l314.0322 368.3613 312.873 369.5137 v311.498 370.5938 311.3633 368.7676 vfUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF